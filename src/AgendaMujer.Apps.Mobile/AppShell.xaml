<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms"
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:bi="clr-namespace:Xamarin.Forms.Bootstrap.Icons;assembly=Xamarin.Forms.Bootstrap.Icons"
       xmlns:home="clr-namespace:AgendaMujer.Apps.Mobile.Views.Home"
       xmlns:laws="clr-namespace:AgendaMujer.Apps.Mobile.Views.Laws"
       xmlns:helpcenters="clr-namespace:AgendaMujer.Apps.Mobile.Views.HelpCenters"
       Title="AgendaMujer.Apps.Mobile"
       x:Class="AgendaMujer.Apps.Mobile.AppShell"
       FlyoutBackgroundColor="White">

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource PrimaryColor}" />
                <Setter Property="Shell.ForegroundColor" Value="Black" />
                <Setter Property="Shell.TitleColor" Value="Black" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource PrimaryColor}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White" />
                <Setter Property="Shell.TabBarUnselectedColor" Value="Gray" />
                <Setter Property="Shell.TabBarTitleColor" Value="Black" />
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <!--<Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource AccentColor}"></Setter>
            </Style>-->
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="Transparent" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="Black" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource PrimaryColor}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="Black" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <!--<Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource PrimaryColor}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>-->
        </ResourceDictionary>
    </Shell.Resources>

    <!--<Shell.FlyoutHeader>
        <Grid BackgroundColor="{StaticResource AccentColor}" HeightRequest="100">
            
        </Grid>
    </Shell.FlyoutHeader>-->
    
    <!--
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <FlyoutItem Title="Acerca">
        <FlyoutItem.Icon>
            <bi:IconSource Icon="InfoCircle" Size="24" Color="Black"/>
        </FlyoutItem.Icon>
        <ShellContent ContentTemplate="{DataTemplate home:AboutView}" />
    </FlyoutItem>
    <FlyoutItem Title="Tus derechos">
        <FlyoutItem.Icon>
            <bi:IconSource Icon="JournalBookmarkFill" Size="24" Color="Black"/>
        </FlyoutItem.Icon>
        <ShellContent ContentTemplate="{DataTemplate laws:LawsIndexView}" />
    </FlyoutItem>
    <FlyoutItem Title="Â¿Necesitas ayuda?">
        <FlyoutItem.Icon>
            <bi:IconSource Icon="Headset" Size="24" Color="Black"/>
        </FlyoutItem.Icon>
        <ShellContent Title="Mapa" ContentTemplate="{DataTemplate helpcenters:HelpCentersMapView}">
            <ShellContent.Icon>
                <bi:IconSource Icon="PinMap" Size="24"/>
            </ShellContent.Icon>
        </ShellContent>
        <ShellContent Title="Lista" ContentTemplate="{DataTemplate helpcenters:HelpCentersListView}" >
            <ShellContent.Icon>
                <bi:IconSource Icon="ListStars" Size="24"/>
            </ShellContent.Icon>
        </ShellContent>
    </FlyoutItem>
    <FlyoutItem Title="Arlette Contreras">
        <FlyoutItem.Icon>
            <bi:IconSource Icon="Link45deg" Size="24" Color="Black"/>
        </FlyoutItem.Icon>
        <ShellContent ContentTemplate="{DataTemplate home:ArletteContrerasView}" />
    </FlyoutItem>

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <!--<MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>-->

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where
        you don't want users to be able to navigate away from. If you would like to navigate to this
        content you can do so by calling
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <!--<TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>-->

    <!-- Optional Templates
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->
</Shell>